(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{703:function(t,a,s){"use strict";s.r(a);var r=s(21),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_132-分割回文串-ii"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_132-分割回文串-ii"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode-cn.com/problems/palindrome-partitioning-ii",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("132. 分割回文串 II"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/doocs/leetcode/blob/main/solution/0100-0199/0132.Palindrome%20Partitioning%20II/README_EN.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("English Version"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"题目描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),s("p",[t._v("给你一个字符串 "),s("code",[t._v("s")]),t._v("，请你将 "),s("code",[t._v("s")]),t._v(" 分割成一些子串，使每个子串都是回文。")]),t._v(" "),s("p",[t._v("返回符合要求的 "),s("strong",[t._v("最少分割次数")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"original__bRMd"},[s("div",[s("p"),t._v(" "),s("p",[s("strong",[t._v("示例 1：")])]),t._v(" "),s("pre",[s("strong",[t._v("输入：")]),t._v('s = "aab"\n'),s("strong",[t._v("输出：")]),t._v("1\n"),s("strong",[t._v("解释：")]),t._v("只需一次分割就可将 "),s("em",[t._v("s ")]),t._v('分割成 ["aa","b"] 这样两个回文子串。\n')]),t._v(" "),s("p",[s("strong",[t._v("示例 2：")])]),t._v(" "),s("pre",[s("strong",[t._v("输入：")]),t._v('s = "a"\n'),s("strong",[t._v("输出：")]),t._v("0\n")]),t._v(" "),s("p",[s("strong",[t._v("示例 3：")])]),t._v(" "),s("pre",[s("strong",[t._v("输入：")]),t._v('s = "ab"\n'),s("strong",[t._v("输出：")]),t._v("1\n")]),t._v(" "),s("p"),t._v(" "),s("p",[s("strong",[t._v("提示：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("1 <= s.length <= 2000")])]),t._v(" "),s("li",[s("code",[t._v("s")]),t._v(" 仅由小写英文字母组成")])])])]),t._v(" "),s("h2",{attrs:{id:"解法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[t._v("#")]),t._v(" 解法")]),t._v(" "),s("h3",{attrs:{id:"python3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Python3")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"java"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Java")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),s("strong",[t._v("...")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);