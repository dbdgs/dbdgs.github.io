(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{723:function(t,e,o){"use strict";o.r(e);var v=o(25),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"_126-单词接龙-ii"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_126-单词接龙-ii"}},[t._v("#")]),t._v(" "),o("a",{attrs:{href:"https://leetcode-cn.com/problems/word-ladder-ii",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("126. 单词接龙 II"),o("OutboundLink")],1)]),t._v(" "),o("p",[o("a",{attrs:{href:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0100-0199/0126.Word%20Ladder%20II/README_EN.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("English Version"),o("OutboundLink")],1)]),t._v(" "),o("h2",{attrs:{id:"题目描述"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),o("p",[t._v("按字典 "),o("code",[t._v("wordList")]),t._v(" 完成从单词 "),o("code",[t._v("beginWord")]),t._v(" 到单词 "),o("code",[t._v("endWord")]),t._v(" 转化，一个表示此过程的 "),o("strong",[t._v("转换序列")]),t._v(" 是形式上像 "),o("code",[t._v("beginWord -> s"),o("sub",[t._v("1")]),t._v(" -> s"),o("sub",[t._v("2")]),t._v(" -> ... -> s"),o("sub",[t._v("k")])]),t._v(" 这样的单词序列，并满足：")]),t._v(" "),o("div",{staticClass:"original__bRMd"},[o("div",[o("ul",[o("li",[t._v("每对相邻的单词之间仅有单个字母不同。")]),t._v(" "),o("li",[t._v("转换过程中的每个单词 "),o("code",[t._v("s"),o("sub",[t._v("i")])]),t._v("（"),o("code",[t._v("1 <= i <= k")]),t._v("）必须是字典 "),o("code",[t._v("wordList")]),t._v(" 中的单词。注意，"),o("code",[t._v("beginWord")]),t._v(" 不必是字典 "),o("code",[t._v("wordList")]),t._v(" 中的单词。")]),t._v(" "),o("li",[o("code",[t._v("s"),o("sub",[t._v("k")]),t._v(" == endWord")])])]),t._v(" "),o("p",[t._v("给你两个单词 "),o("code",[t._v("beginWord")]),t._v(" 和 "),o("code",[t._v("endWord")]),t._v(" ，以及一个字典 "),o("code",[t._v("wordList")]),t._v(" 。请你找出并返回所有从 "),o("code",[t._v("beginWord")]),t._v(" 到 "),o("code",[t._v("endWord")]),t._v(" 的 "),o("strong",[t._v("最短转换序列")]),t._v(" ，如果不存在这样的转换序列，返回一个空列表。每个序列都应该以单词列表"),o("em"),o("code",[t._v("[beginWord, s"),o("sub",[t._v("1")]),t._v(", s"),o("sub",[t._v("2")]),t._v(", ..., s"),o("sub",[t._v("k")]),t._v("]")]),t._v(" 的形式返回。")]),t._v(" "),o("p"),t._v(" "),o("p",[o("strong",[t._v("示例 1：")])]),t._v(" "),o("pre",[o("strong",[t._v("输入：")]),t._v('beginWord = "hit", endWord = "cog", wordList = ["hot","dot","dog","lot","log","cog"]\n'),o("strong",[t._v("输出：")]),t._v('[["hit","hot","dot","dog","cog"],["hit","hot","lot","log","cog"]]\n'),o("strong",[t._v("解释：")]),t._v('存在 2 种最短的转换序列：\n"hit" -> "hot" -> "dot" -> "dog" -> "cog"\n"hit" -> "hot" -> "lot" -> "log" -> "cog"\n')]),t._v(" "),o("p",[o("strong",[t._v("示例 2：")])]),t._v(" "),o("pre",[o("strong",[t._v("输入：")]),t._v('beginWord = "hit", endWord = "cog", wordList = ["hot","dot","dog","lot","log"]\n'),o("strong",[t._v("输出：")]),t._v("[]\n"),o("strong",[t._v("解释：")]),t._v('endWord "cog" 不在字典 wordList 中，所以不存在符合要求的转换序列。\n')]),t._v(" "),o("p"),t._v(" "),o("p",[o("strong",[t._v("提示：")])]),t._v(" "),o("ul",[o("li",[o("code",[t._v("1 <= beginWord.length <= 7")])]),t._v(" "),o("li",[o("code",[t._v("endWord.length == beginWord.length")])]),t._v(" "),o("li",[o("code",[t._v("1 <= wordList.length <= 5000")])]),t._v(" "),o("li",[o("code",[t._v("wordList[i].length == beginWord.length")])]),t._v(" "),o("li",[o("code",[t._v("beginWord")]),t._v("、"),o("code",[t._v("endWord")]),t._v(" 和 "),o("code",[t._v("wordList[i]")]),t._v(" 由小写英文字母组成")]),t._v(" "),o("li",[o("code",[t._v("beginWord != endWord")])]),t._v(" "),o("li",[o("code",[t._v("wordList")]),t._v(" 中的所有单词 "),o("strong",[t._v("互不相同")])])])])]),t._v(" "),o("h2",{attrs:{id:"解法"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[t._v("#")]),t._v(" 解法")]),t._v(" "),o("h3",{attrs:{id:"python3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[t._v("#")]),t._v(" "),o("strong",[t._v("Python3")])]),t._v(" "),o("div",{staticClass:"language-python line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-python"}},[o("code",[t._v("\n")])]),t._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[t._v("1")]),o("br")])]),o("h3",{attrs:{id:"java"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" "),o("strong",[t._v("Java")])]),t._v(" "),o("div",{staticClass:"language-java line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-java"}},[o("code",[t._v("\n")])]),t._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[t._v("1")]),o("br")])]),o("h3",{attrs:{id:""}},[o("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),o("strong",[t._v("...")])]),t._v(" "),o("div",{staticClass:"language- line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("\n")])]),t._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[t._v("1")]),o("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);