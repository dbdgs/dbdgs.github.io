(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{862:function(t,a,e){"use strict";e.r(a);var s=e(21),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_289-生命游戏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_289-生命游戏"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://leetcode-cn.com/problems/game-of-life",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("289. 生命游戏"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0200-0299/0289.Game%20of%20Life/README_EN.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("English Version"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"题目描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),e("p",[t._v("根据 "),e("a",{attrs:{href:"https://baike.baidu.com/item/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/2926434?fr=aladdin",target:"_blank"}},[t._v("百度百科")]),t._v(" ，生命游戏，简称为生命，是英国数学家约翰·何顿·康威在 1970 年发明的细胞自动机。")]),t._v(" "),e("p",[t._v("给定一个包含 m × n 个格子的面板，每一个格子都可以看成是一个细胞。每个细胞都具有一个初始状态：1 即为活细胞（live），或 0 即为死细胞（dead）。每个细胞与其八个相邻位置（水平，垂直，对角线）的细胞都遵循以下四条生存定律：")]),t._v(" "),e("ol",[e("li",[t._v("如果活细胞周围八个位置的活细胞数少于两个，则该位置活细胞死亡；")]),t._v(" "),e("li",[t._v("如果活细胞周围八个位置有两个或三个活细胞，则该位置活细胞仍然存活；")]),t._v(" "),e("li",[t._v("如果活细胞周围八个位置有超过三个活细胞，则该位置活细胞死亡；")]),t._v(" "),e("li",[t._v("如果死细胞周围正好有三个活细胞，则该位置死细胞复活；")])]),t._v(" "),e("p",[t._v("下一个状态是通过将上述规则同时应用于当前状态下的每个细胞所形成的，其中细胞的出生和死亡是同时发生的。给你 "),e("span",[e("code",[t._v("m x n")])]),t._v(" 网格面板 "),e("code",[t._v("board")]),t._v(" 的当前状态，返回下一个状态。")]),t._v(" "),e("p"),t._v(" "),e("p",[e("strong",[t._v("示例 1：")])]),t._v(" "),e("img",{staticStyle:{width:"562px",height:"322px"},attrs:{alt:"",src:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0200-0299/0289.Game%20of%20Life/images/grid1.jpg"}}),t._v(" "),e("pre",[e("strong",[t._v("输入：")]),t._v("board = [[0,1,0],[0,0,1],[1,1,1],[0,0,0]]\n"),e("strong",[t._v("输出：")]),t._v("[[0,0,0],[1,0,1],[0,1,1],[0,1,0]]\n")]),t._v(" "),e("p",[e("strong",[t._v("示例 2：")])]),t._v(" "),e("img",{staticStyle:{width:"402px",height:"162px"},attrs:{alt:"",src:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0200-0299/0289.Game%20of%20Life/images/grid2.jpg"}}),t._v(" "),e("pre",[e("strong",[t._v("输入：")]),t._v("board = [[1,1],[1,0]]\n"),e("strong",[t._v("输出：")]),t._v("[[1,1],[1,1]]\n")]),t._v(" "),e("p"),t._v(" "),e("p",[e("strong",[t._v("提示：")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("m == board.length")])]),t._v(" "),e("li",[e("code",[t._v("n == board[i].length")])]),t._v(" "),e("li",[e("code",[t._v("1 <= m, n <= 25")])]),t._v(" "),e("li",[e("code",[t._v("board[i][j]")]),t._v(" 为 "),e("code",[t._v("0")]),t._v(" 或 "),e("code",[t._v("1")])])]),t._v(" "),e("p"),t._v(" "),e("p",[e("strong",[t._v("进阶：")])]),t._v(" "),e("ul",[e("li",[t._v("你可以使用原地算法解决本题吗？请注意，面板上所有格子需要同时被更新：你不能先更新某些格子，然后使用它们的更新后的值再更新其他格子。")]),t._v(" "),e("li",[t._v("本题中，我们使用二维数组来表示面板。原则上，面板是无限的，但当活细胞侵占了面板边界时会造成问题。你将如何解决这些问题？")])]),t._v(" "),e("h2",{attrs:{id:"解法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[t._v("#")]),t._v(" 解法")]),t._v(" "),e("h3",{attrs:{id:"python3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Python3")])]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"java"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Java")])]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),e("strong",[t._v("...")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);