(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{737:function(t,a,s){"use strict";s.r(a);var r=s(21),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_164-最大间距"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_164-最大间距"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode-cn.com/problems/maximum-gap",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("164. 最大间距"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0100-0199/0164.Maximum%20Gap/README_EN.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("English Version"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"题目描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),s("p",[t._v("给定一个无序的数组，找出数组在排序之后，相邻元素之间最大的差值。")]),t._v(" "),s("p",[t._v("如果数组元素个数小于 2，则返回 0。")]),t._v(" "),s("p",[s("strong",[t._v("示例 1:")])]),t._v(" "),s("pre",[s("strong",[t._v("输入:")]),t._v(" [3,6,9,1]\n"),s("strong",[t._v("输出:")]),t._v(" 3\n"),s("strong",[t._v("解释:")]),t._v(" 排序后的数组是 [1,3,6,9]"),s("strong",[s("em",[t._v(", ")])]),t._v("其中相邻元素 (3,6) 和 (6,9) 之间都存在最大差值 3。")]),t._v(" "),s("p",[s("strong",[t._v("示例 2:")])]),t._v(" "),s("pre",[s("strong",[t._v("输入:")]),t._v(" [10]\n"),s("strong",[t._v("输出:")]),t._v(" 0\n"),s("strong",[t._v("解释:")]),t._v(" 数组元素个数小于 2，因此返回 0。")]),t._v(" "),s("p",[s("strong",[t._v("说明:")])]),t._v(" "),s("ul",[s("li",[t._v("你可以假设数组中所有元素都是非负整数，且数值在 32 位有符号整数范围内。")]),t._v(" "),s("li",[t._v("请尝试在线性时间复杂度和空间复杂度的条件下解决此问题。")])]),t._v(" "),s("h2",{attrs:{id:"解法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[t._v("#")]),t._v(" 解法")]),t._v(" "),s("h3",{attrs:{id:"python3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Python3")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"java"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Java")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),s("strong",[t._v("...")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);