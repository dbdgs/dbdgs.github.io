(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{753:function(t,a,e){"use strict";e.r(a);var n=e(25),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_156-上下翻转二叉树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_156-上下翻转二叉树"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-upside-down",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("156. 上下翻转二叉树"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/doocs/leetcode/blob/main/solution/0100-0199/0156.Binary%20Tree%20Upside%20Down/README_EN.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("English Version"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"题目描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),e("p",[t._v("给定一个二叉树，其中所有的右节点要么是具有兄弟节点（拥有相同父节点的左节点）的叶节点，要么为空，将此二叉树上下翻转并将它变成一棵树， 原来的右节点将转换成左叶节点。返回新的根。")]),t._v(" "),e("p",[e("strong",[t._v("例子:")])]),t._v(" "),e("pre",[e("strong",[t._v("输入: ")]),t._v("[1,2,3,4,5]\n\n    1\n   / \\\n  2   3\n / \\\n4   5\n\n"),e("strong",[t._v("输出:")]),t._v(" 返回二叉树的根 [4,5,2,#,#,3,1]\n\n   4\n  / \\\n 5   2\n    / \\\n   3   1  \n")]),t._v(" "),e("p",[e("strong",[t._v("说明:")])]),t._v(" "),e("p",[t._v("对 "),e("code",[t._v("[4,5,2,#,#,3,1]")]),t._v(" 感到困惑? 下面详细介绍请查看 "),e("a",{attrs:{href:"https://support.leetcode-cn.com/hc/kb/article/1194353/",target:"_blank"}},[t._v("二叉树是如何被序列化的")]),t._v("。")]),t._v(" "),e("p",[t._v("二叉树的序列化遵循层次遍历规则，当没有节点存在时，'#' 表示路径终止符。")]),t._v(" "),e("p",[t._v("这里有一个例子:")]),t._v(" "),e("pre",[t._v("   1\n  / \\\n 2   3\n    /\n   4\n    \\\n     5\n")]),t._v(" "),e("p",[t._v("上面的二叉树则被序列化为 "),e("code",[t._v("[1,2,3,#,#,4,#,#,5]")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"解法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[t._v("#")]),t._v(" 解法")]),t._v(" "),e("h3",{attrs:{id:"python3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Python3")])]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"java"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Java")])]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),e("strong",[t._v("...")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])}),[],!1,null,null,null);a.default=s.exports}}]);