(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{790:function(v,e,t){"use strict";t.r(e);var _=t(21),s=Object(_.a)({},(function(){var v=this,e=v.$createElement,t=v._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"_218-天际线问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_218-天际线问题"}},[v._v("#")]),v._v(" "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/the-skyline-problem",target:"_blank",rel:"nofollow noopener noreferrer"}},[v._v("218. 天际线问题"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("a",{attrs:{href:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0200-0299/0218.The%20Skyline%20Problem/README_EN.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[v._v("English Version"),t("OutboundLink")],1)]),v._v(" "),t("h2",{attrs:{id:"题目描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[v._v("#")]),v._v(" 题目描述")]),v._v(" "),t("p",[v._v("城市的天际线是从远处观看该城市中所有建筑物形成的轮廓的外部轮廓。给你所有建筑物的位置和高度，请返回由这些建筑物形成的"),t("strong",[v._v(" 天际线")]),v._v(" 。")]),v._v(" "),t("p",[v._v("每个建筑物的几何信息由数组 "),t("code",[v._v("buildings")]),v._v(" 表示，其中三元组 "),t("code",[v._v("buildings[i] = [lefti, righti, heighti]")]),v._v(" 表示：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("left"),t("sub",[v._v("i")])]),v._v(" 是第 "),t("code",[v._v("i")]),v._v(" 座建筑物左边缘的 "),t("code",[v._v("x")]),v._v(" 坐标。")]),v._v(" "),t("li",[t("code",[v._v("right"),t("sub",[v._v("i")])]),v._v(" 是第 "),t("code",[v._v("i")]),v._v(" 座建筑物右边缘的 "),t("code",[v._v("x")]),v._v(" 坐标。")]),v._v(" "),t("li",[t("code",[v._v("height"),t("sub",[v._v("i")])]),v._v(" 是第 "),t("code",[v._v("i")]),v._v(" 座建筑物的高度。")])]),v._v(" "),t("p",[t("strong",[v._v("天际线")]),v._v(" 应该表示为由 “关键点” 组成的列表，格式 "),t("code",[v._v("[[x"),t("sub",[v._v("1")]),v._v(",y"),t("sub",[v._v("1")]),v._v("],[x"),t("sub",[v._v("2")]),v._v(",y"),t("sub",[v._v("2")]),v._v("],...]")]),v._v(" ，并按 "),t("strong",[v._v("x 坐标 ")]),v._v("进行 "),t("strong",[v._v("排序")]),v._v(" 。"),t("strong",[v._v("关键点是水平线段的左端点")]),v._v("。列表中最后一个点是最右侧建筑物的终点，"),t("code",[v._v("y")]),v._v(" 坐标始终为 "),t("code",[v._v("0")]),v._v(" ，仅用于标记天际线的终点。此外，任何两个相邻建筑物之间的地面都应被视为天际线轮廓的一部分。")]),v._v(" "),t("p",[t("strong",[v._v("注意：")]),v._v("输出天际线中不得有连续的相同高度的水平线。例如 "),t("code",[v._v("[...[2 3], [4 5], [7 5], [11 5], [12 7]...]")]),v._v(" 是不正确的答案；三条高度为 5 的线应该在最终输出中合并为一个："),t("code",[v._v("[...[2 3], [4 5], [12 7], ...]")])]),v._v(" "),t("p"),v._v(" "),t("p",[t("strong",[v._v("示例 1：")])]),v._v(" "),t("img",{staticStyle:{width:"800px",height:"331px"},attrs:{alt:"",src:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0200-0299/0218.The%20Skyline%20Problem/images/merged.jpg"}}),v._v(" "),t("pre",[t("strong",[v._v("输入：")]),v._v("buildings = [[2,9,10],[3,7,15],[5,12,12],[15,20,10],[19,24,8]]\n"),t("strong",[v._v("输出：")]),v._v("[[2,10],[3,15],[7,12],[12,0],[15,10],[20,8],[24,0]]\n"),t("strong",[v._v("解释：")]),v._v("\n图 A"),t("strong",[v._v(" ")]),v._v("显示输入的所有建筑物的位置和高度，\n图 B 显示由这些建筑物形成的天际线。图 B 中的红点表示输出列表中的关键点。")]),v._v(" "),t("p",[t("strong",[v._v("示例 2：")])]),v._v(" "),t("pre",[t("strong",[v._v("输入：")]),v._v("buildings = [[0,2,3],[2,5,3]]\n"),t("strong",[v._v("输出：")]),v._v("[[0,3],[5,0]]\n")]),v._v(" "),t("p"),v._v(" "),t("p",[t("strong",[v._v("提示：")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("1 <= buildings.length <= 10"),t("sup",[v._v("4")])])]),v._v(" "),t("li",[t("code",[v._v("0 <= left"),t("sub",[v._v("i")]),v._v(" < right"),t("sub",[v._v("i")]),v._v(" <= 2"),t("sup",[v._v("31")]),v._v(" - 1")])]),v._v(" "),t("li",[t("code",[v._v("1 <= height"),t("sub",[v._v("i")]),v._v(" <= 2"),t("sup",[v._v("31")]),v._v(" - 1")])]),v._v(" "),t("li",[t("code",[v._v("buildings")]),v._v(" 按 "),t("code",[v._v("left"),t("sub",[v._v("i")])]),v._v(" 非递减排序")])]),v._v(" "),t("h2",{attrs:{id:"解法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[v._v("#")]),v._v(" 解法")]),v._v(" "),t("h3",{attrs:{id:"python3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[v._v("#")]),v._v(" "),t("strong",[v._v("Python3")])]),v._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("h3",{attrs:{id:"java"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[v._v("#")]),v._v(" "),t("strong",[v._v("Java")])]),v._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("h3",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[v._v("#")]),v._v(" "),t("strong",[v._v("...")])]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])])])}),[],!1,null,null,null);e.default=s.exports}}]);