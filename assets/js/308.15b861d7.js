(window.webpackJsonp=window.webpackJsonp||[]).push([[308],{870:function(e,t,r){"use strict";r.r(t);var a=r(21),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"_297-二叉树的序列化与反序列化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_297-二叉树的序列化与反序列化"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("297. 二叉树的序列化与反序列化"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0200-0299/0297.Serialize%20and%20Deserialize%20Binary%20Tree/README_EN.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("English Version"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"题目描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[e._v("#")]),e._v(" 题目描述")]),e._v(" "),r("p",[e._v("序列化是将一个数据结构或者对象转换为连续的比特位的操作，进而可以将转换后的数据存储在一个文件或者内存中，同时也可以通过网络传输到另一个计算机环境，采取相反方式重构得到原数据。")]),e._v(" "),r("p",[e._v("请设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串反序列化为原始的树结构。")]),e._v(" "),r("p",[r("strong",[e._v("提示: ")]),e._v("输入输出格式与 LeetCode 目前使用的方式一致，详情请参阅 "),r("a",{attrs:{href:"/faq/#binary-tree"}},[e._v("LeetCode 序列化二叉树的格式")]),e._v("。你并非必须采取这种方式，你也可以采用其他的方法解决这个问题。")]),e._v(" "),r("p"),e._v(" "),r("p",[r("strong",[e._v("示例 1：")])]),e._v(" "),r("img",{staticStyle:{width:"442px",height:"324px"},attrs:{alt:"",src:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0200-0299/0297.Serialize%20and%20Deserialize%20Binary%20Tree/images/serdeser.jpg"}}),e._v(" "),r("pre",[r("strong",[e._v("输入：")]),e._v("root = [1,2,3,null,null,4,5]\n"),r("strong",[e._v("输出：")]),e._v("[1,2,3,null,null,4,5]\n")]),e._v(" "),r("p",[r("strong",[e._v("示例 2：")])]),e._v(" "),r("pre",[r("strong",[e._v("输入：")]),e._v("root = []\n"),r("strong",[e._v("输出：")]),e._v("[]\n")]),e._v(" "),r("p",[r("strong",[e._v("示例 3：")])]),e._v(" "),r("pre",[r("strong",[e._v("输入：")]),e._v("root = [1]\n"),r("strong",[e._v("输出：")]),e._v("[1]\n")]),e._v(" "),r("p",[r("strong",[e._v("示例 4：")])]),e._v(" "),r("pre",[r("strong",[e._v("输入：")]),e._v("root = [1,2]\n"),r("strong",[e._v("输出：")]),e._v("[1,2]\n")]),e._v(" "),r("p"),e._v(" "),r("p",[r("strong",[e._v("提示：")])]),e._v(" "),r("ul",[r("li",[e._v("树中结点数在范围 "),r("code",[e._v("[0, 10"),r("sup",[e._v("4")]),e._v("]")]),e._v(" 内")]),e._v(" "),r("li",[r("code",[e._v("-1000 <= Node.val <= 1000")])])]),e._v(" "),r("h2",{attrs:{id:"解法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[e._v("#")]),e._v(" 解法")]),e._v(" "),r("h3",{attrs:{id:"python3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[e._v("#")]),e._v(" "),r("strong",[e._v("Python3")])]),e._v(" "),r("div",{staticClass:"language-python line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-python"}},[r("code",[e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h3",{attrs:{id:"java"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[e._v("#")]),e._v(" "),r("strong",[e._v("Java")])]),e._v(" "),r("div",{staticClass:"language-java line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-java"}},[r("code",[e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h3",{attrs:{id:""}},[r("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")]),e._v(" "),r("strong",[e._v("...")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])])])}),[],!1,null,null,null);t.default=s.exports}}]);