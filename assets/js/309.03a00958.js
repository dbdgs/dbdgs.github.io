(window.webpackJsonp=window.webpackJsonp||[]).push([[309],{871:function(e,t,n){"use strict";n.r(t);var a=n(21),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_298-二叉树最长连续序列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_298-二叉树最长连续序列"}},[e._v("#")]),e._v(" "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("298. 二叉树最长连续序列"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0200-0299/0298.Binary%20Tree%20Longest%20Consecutive%20Sequence/README_EN.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("English Version"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"题目描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[e._v("#")]),e._v(" 题目描述")]),e._v(" "),n("p",[e._v("给你一棵指定的二叉树，请你计算它最长连续序列路径的长度。")]),e._v(" "),n("p",[e._v("该路径，可以是从某个初始结点到树中任意结点，通过「父 - 子」关系连接而产生的任意路径。")]),e._v(" "),n("p",[e._v("这个最长连续的路径，必须从父结点到子结点，反过来是不可以的。")]),e._v(" "),n("p",[n("strong",[e._v("示例 1：")])]),e._v(" "),n("pre",[n("strong",[e._v("输入:")]),e._v("\n\n   1\n    \\\n     3\n    / \\\n   2   4\n        \\\n         5\n\n"),n("strong",[e._v("输出:")]),e._v(" "),n("code",[e._v("3")]),e._v("\n\n"),n("strong",[e._v("解析: ")]),e._v("当中，最长连续序列是 "),n("code",[e._v("3-4-5，所以")]),e._v("返回结果为 "),n("code",[e._v("3")])]),e._v(" "),n("p",[n("strong",[e._v("示例 2：")])]),e._v(" "),n("pre",[n("strong",[e._v("输入:\n\n")]),e._v("   2\n    \\\n     3\n    / \n   2    \n  / \n 1\n\n"),n("strong",[e._v("输出: 2 \n\n解析: ")]),e._v("当中，最长连续序列是 "),n("code",[e._v("2-3。注意，不是")]),e._v(" "),n("code",[e._v("3-2-1，所以")]),e._v("返回 "),n("code",[e._v("2。")])]),e._v(" "),n("h2",{attrs:{id:"解法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[e._v("#")]),e._v(" 解法")]),e._v(" "),n("h3",{attrs:{id:"python3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[e._v("#")]),e._v(" "),n("strong",[e._v("Python3")])]),e._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h3",{attrs:{id:"java"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[e._v("#")]),e._v(" "),n("strong",[e._v("Java")])]),e._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h3",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")]),e._v(" "),n("strong",[e._v("...")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])])])}),[],!1,null,null,null);t.default=s.exports}}]);